atom_style         meso-molecular
dimension          3
newton             on
units              micro
              
read_data          calendering.data

variable		   trial	equal 1

variable           h        	 equal 2.0
variable           h_wall    	 equal 20.0
variable 		   h_mix	     equal (${h}+${h_wall})/2.0
variable           c     	     equal 100.0             # soundspeed for Tait's EOS
variable           dt            equal 0.0001
variable		   visc_CBD      equal 25000			 # viscosity in g/m*s (avg visc should be 2.3578 kg/m*s)
variable 		   visc_active   equal 2357.8
variable 		   visc_solvent  equal 2357.8
variable 		   g             equal 9.8/1000000

variable		   visc_mix1     equal (${visc_CBD}+${visc_active})/2.0
variable 		   visc_mix2     equal (${visc_active}+${visc_solvent})/2.0
variable 		   visc_mix3     equal (${visc_CBD}+${visc_solvent})/2.0

group              cbd type 1 
group			   active type 2
group              slurry type 1 2 
group              fixed_wall type 5
group			   moving_wall type 6
group              bc type 5 6

pair_style         hybrid/overlay sph/rhosum 1 sph/taitwater/morris
pair_coeff         * * sph/taitwater/morris 0.93 ${c} ${visc_CBD} ${h}
#pair_coeff         5 * sph/taitwater/morris 0.93 ${c} ${visc_CBD} ${h_wall}
#pair_coeff         2 2 sph/taitwater/morris 0.93 ${c} ${visc_active} ${h}
#pair_coeff         3 3 sph/taitwater/morris 0.93 ${c} ${visc_solvent} ${h}

#pair_coeff         1 2 sph/taitwater/morris 0.93 ${c} ${visc_mix1} ${h_mix}
#pair_coeff         2 3 sph/taitwater/morris 0.93 ${c} ${visc_mix2} ${h_mix}
#pair_coeff         1 3 sph/taitwater/morris 0.93 ${c} ${visc_mix3} ${h_mix}

pair_coeff         * * sph/rhosum ${h}
pair_coeff         5 * sph/rhosum ${h_wall}
#pair_coeff         2 2 sph/rhosum ${h_act}


timestep    ${dt}


fix make_rigid active rigid molecule


# time-integrate position, velocities, internal energy and density of cbd particles

# time-integrate only internal energy and density of boundary particles
fix                integrate_bc_fix bc meso/stationary

fix                integrate_slurry_fix slurry meso

fix add_gravity slurry gravity ${g} vector 0 0 -1  # Acceleration is micrometers/(microseconds)^2
fix fixed_temp slurry langevin 3000 3000 10 234 
dump               dump_id all custom 1000 modified_timestep_${trial}.lammpstrj id type x y z 
dump_modify        dump_id first yes
dump_modify 	   dump_id sort 3

#compute thermo_temp slurry temp
#thermo_modify temp slurry
uncompute thermo_temp
compute thermo_temp slurry temp
thermo             1000
thermo_style       custom step time temp press density lx ly lz
thermo_modify      norm no

neigh_modify       every 5 delay 0 check no
variable           skin equal 0.3*${h}
neighbor           ${skin} bin # set Verlet list skin distance



# Move piston wall to starting position
variable dz equal bound(slurry,zmax)-bound(moving_wall,zmin)+2
displace_atoms moving_wall move 0 0 ${dz}

#fix rigidwall moving_wall rigid single # this will take into account all the chnges that the wall goes through



run 3000


#region   bottom block 0 EDGE 0 EDGE 2 20

#group rigids type 1 2 4

#fix rigidall rigids rigid single # this will take into account all the chnges that the wall goes through

#fix pishing_wall moving_wall aveforce 0 0 -720 #region bottom




variable wall_speed equal 0.04
variable surface_speed equal abs(${wall_speed}*3)
fix calendering moving_wall move linear  0.0 0.0 -1




variable before_height equal bound(slurry,zmax)

print ${before_height}


run 2500000

#fix more_gravity slurry gravity ${g} vector 0 0 -1
#run 1000

unfix calendering 

#fix rest moving_wall move linear  0.0 0.0 30

#unfix rest
delete_atoms group	moving_wall	
####################
variable rest_height_1 equal bound(slurry,zmax)

print ${rest_height_1}

run 1000

################

variable rest_height_2 equal bound(slurry,zmax)

print ${rest_height_2}

run 1000

################

variable rest_height_3 equal bound(slurry,zmax)

print ${rest_height_3}

run 1000

################
variable rest_height_4 equal bound(slurry,zmax)

print ${rest_height_4}

run 1000

################
variable rest_height_5 equal bound(slurry,zmax)

print ${rest_height_5}

run 1000

################

variable rest_height_6 equal bound(slurry,zmax)

print ${rest_height_6}

run 1000

################
variable rest_height_7 equal bound(slurry,zmax)

print ${rest_height_7}

run 1000

################
variable rest_height_8 equal bound(slurry,zmax)

print ${rest_height_8}

run 1000

################
variable rest_height_9 equal bound(slurry,zmax)

print ${rest_height_9}

run 1000

################

variable rest_height_10 equal bound(slurry,zmax)

print ${rest_height_10}

run 1000

################

#unfix pushing



variable finished_height equal bound(slurry,zmax)

print ${finished_height}


#delete_atoms group	moving_wall

write_data modified_timestep_calendered_${trial}.data